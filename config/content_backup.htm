<h1>About</h1>
<p>41023131</p>
<p>倉儲:<a href="https://github.com/george0324/cp2023">https://github.com/george0324/cp2023</a> </p>
<p>網頁:<a href="https://george0324.github.io/cp2023/content/index.html">https://george0324.github.io/cp2023/content/index.html</a> </p>
<h1>W4</h1>
<p>1.<b>1.牛頓第二運動定律</b><span>（</span><span lang="en">Newton's second law of motion</span><span>）</span></p>
<p><a href="/downloads/牛頓第二定律.txt">牛頓第二定律.txt</a></p>
<p>2.<span>mass-spring-damper 系統</span></p>
<p><a href="/downloads/mass-spring-damper 系統.txt">mass-spring-damper 系統.txt</a></p>
<p>3.<span>Euler's Method</span></p>
<p><span></span></p>
<h1>W6</h1>
<h2>ROC</h2>
<p><a href="/downloads/gd-rocflag.c">gd-rocflag.c</a></p>
<p><img alt="" height="378" src="/images/S__3997699.jpg" width="672"/></p><h2>UK</h2>
<p><a href="/downloads/UK.C">UK.C</a></p>
<p><img alt="" height="332" src="/images/UK.png" width="590"/></p>
<p></p>
<p></p><h2>Japan</h2>
<p><a href="/downloads/Japan.c">Japan.c</a></p>
<p><img alt="" height="294" src="/images/MicrosoftTeams-image.png" width="523"/></p>
<p></p><h2>China</h2>
<p><a href="/downloads/China.c">China.c</a></p>
<p><img alt="" height="342" src="/images/中國.jpg" width="461"/></p><h1>ANSIC</h1>
<h4>練習1</h4>
<p><span>從 </span><a href="https://www.w3resource.com/c-programming-exercises/">https://www.w3resource.com/c-programming-exercises/</a><span><span> </span>網頁中自選 10 個練習範例, 分別在 Replit, Windows 與 Linux (or macOS) 中執行後, 取下執行畫面放入個人的 Github Pages 網頁 (即帳號.github.io 網站), 以<span> </span><span>ANSIC</span><span> </span>作為頁面標題並詳細說明每一行的程式語法.</span></p>
<p>1.<span class="Y2IQFc" lang="zh-TW">編寫一個 C 程式來列印您的姓名、出生日期和手機號碼。 預期輸出：</span></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/1.txt">輸出程式.txt</a></span></p>
<p><img alt="" height="272" src="/images/1.png" width="481"/></p>
<p>2.<span class="Y2IQFc" lang="zh-TW">寫一個 C 程式來計算高 7 英吋、寬 5 英吋的矩形的周長和麵積。</span></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/2.txt">矩形程式.txt</a></span></p>
<p><span class="Y2IQFc" lang="zh-TW"><img alt="" height="293" src="/images/2.png" width="480"/></span></p>
<p><span class="Y2IQFc" lang="zh-TW">3.</span><span class="Y2IQFc" lang="zh-TW">寫一個 C 程式來計算給定半徑的圓的周長和面積。</span></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/3.txt">計算給定半徑的圓的周長和面積.txt</a></span></p>
<p><img alt="" height="258" src="/images/3.png" width="481"/></p>
<p>4.<span class="Y2IQFc" lang="zh-TW">寫一個 C 程式將給定整數（以秒為單位）轉換為小時、分鐘和秒。</span></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/4.txt">轉換程式.txt</a></span></p>
<p><span class="Y2IQFc" lang="zh-TW"><img alt="" height="255" src="/images/4..png" width="477"/></span></p>
<p><span class="Y2IQFc" lang="zh-TW">5.</span><span class="Y2IQFc" lang="zh-TW">寫一個 C 程序，將給定的整數（以天為單位）轉換為年、月和日，假設所有月份都有 30 天，所有年份都有 365 天。</span></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/5..txt">程式.txt</a></span></p>
<p><span class="Y2IQFc" lang="zh-TW"><img alt="" height="256" src="/images/5..png" width="472"/></span></p>
<p><span class="Y2IQFc" lang="zh-TW">6.</span><span class="Y2IQFc" lang="zh-TW">寫一個 C 程序，讀取 5 個數字並對它們之間的所有奇數求和。</span></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/6.txt">奇數求和程式.txt</a></span></p>
<p><span class="Y2IQFc" lang="zh-TW"><img alt="" height="231" src="/images/6.png" width="478"/></span></p>
<p><span class="Y2IQFc" lang="zh-TW">7.</span><span class="Y2IQFc" lang="zh-TW">寫一個 C 程序，讀取兩個整數並檢查它們是否相乘。</span></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/7.txt">秒數程式.txt</a></span></p>
<p><span class="Y2IQFc" lang="zh-TW"><img alt="" height="318" src="/images/7..png" width="512"/></span></p>
<p><span class="Y2IQFc" lang="zh-TW">8.<span>將公里每小時轉換為英哩每小時</span></span></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/8.txt">公里轉換程式公里轉換程式.txt</a></span></p>
<p><span class="Y2IQFc" lang="zh-TW"><img alt="" height="302" src="/images/8.png" width="505"/></span></p>
<p><span class="Y2IQFc" lang="zh-TW">9.</span><span class="Y2IQFc" lang="zh-TW">寫一個將攝氏度轉換為華氏度的程式。</span></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/9.txt">攝氏轉華氏度程式.txt</a></span></p>
<p><span class="Y2IQFc" lang="zh-TW"><img alt="" height="269" src="/images/9.png" width="499"/></span></p>
<p><span class="Y2IQFc" lang="zh-TW">10.</span><span class="Y2IQFc" lang="zh-TW">寫一個 C 程序，以小時和分鐘為輸入，併計算總分鐘數。</span></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/10.txt">計算總分鐘數程式.txt</a></span></p>
<p><span class="Y2IQFc" lang="zh-TW"><img alt="" height="266" src="/images/10.png" width="499"/></span></p>
<h2>C_ex</h2>
<h1>W7</h1>
<p><span class="Y2IQFc" lang="zh-TW"></span>第一次嘗試</p>
<p><a href="/downloads/gd_roc_flag.c">gd_roc_flag.c</a></p>
<p><span class="Y2IQFc" lang="zh-TW"><a href="/downloads/gd-rocflag.c">gd-rocflag.c</a></span></p>
<p><span class="Y2IQFc" lang="zh-TW"><img alt="" height="348" src="/images/S__3997699.jpg" width="618"/></span></p><h1>W12</h1>
<p><a href="/downloads/hellogd.c">hellogd.c</a></p>
<p><img alt="" height="349" src="/images/螢幕擷取畫面 2023-12-26 154459.png" width="620"/></p>
<p><a href="/downloads/2.c">2.c</a></p>
<p><img alt="" height="287" src="/images/2c.png" width="434"/></p>
<h1>W13</h1>
<h4>心得:這堂課從一開始到現在收穫很多，雖然我是重修這門課，但學到了不同的方式去了解C語言。<span>在第一次修課時，可能是因為種種原因，也包括自己沒有很認真參與課堂，這次多了一個機會去改正和成長，在更積極地與與同學討論程式和過程中遇到的麻煩，解決問題。最後，這次重修讓我意識到學習是一個持續不斷的過程，雖然我重修了這門課，相反，這是一個機會去再更了解這堂課所教的C語言。</span></h4><h1>W15</h1>
<p><a href="/downloads/roc_list_coord_flag.c">roc_list_coord_flag.c</a></p>
<p></p>
<p><img alt="" height="450" src="/images/11.png" width="800"/></p>
<script>
var winkVideoData_40923151 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="w15" height="630" muted="true" width="1008">
<source src="./../downloads/w15.mp4" type="video/mp4"/></video></div>
<p><a href="/downloads/w15.c">w15.c</a></p>
<p><img alt="" height="402" src="/images/w15作業.png" width="715"/></p>
<p></p>
<p><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="w15作業-2" height="630" muted="true" width="1008">
<source src="./../downloads/w15作業-2.mp4" type="video/mp4"/></video></p>
<h1>Final Project</h1>
<p><img alt="" height="349" src="/images/期末.png" width="394"/></p>
<p><span>1. 請利用 C + gd 繪圖程式庫重新繪製 Figure 1 的質量、彈簧與阻尼器與左右牆面的配置圖.</span></p>
<p>第一次嘗試</p>
<p><a href="/downloads/w16.c">w16.c</a></p>
<p>不知在程式有關彈簧函數打錯造成彈簧沒有完成頭尾也沒有連起來。</p>
<p><img alt="" height="419" src="/images/w16.png" width="559"/></p>
<p>第二次嘗試</p>
<p><img alt="" height="361" src="/images/test.png" width="482"/></p>
<p><a href="/downloads/w16-1.c">w16-1.c</a></p>
<script>
var winkVideoData_41023131 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="w16-1" height="630" muted="true" width="1008">
<source src="./../downloads/w16-1.mp4" type="video/mp4"/></video></div><h1>課程評分</h1>
<p><span style="background-color: #00ffff;">課程評分:</span></p>
<p>線上測驗、期中網站與簡報、期末網站與簡報.</p>
<p><span style="background-color: #00ffff;">線上測驗:</span></p>
<p>建立帳號後 (<span>請將密碼寫入手機的備忘錄</span>), 每週不定時進行.</p>
<p><span style="background-color: #00ffff;">期中網站評分與簡報:</span></p>
<p>期中考前兩週開始進行.</p>
<p><span style="background-color: #00ffff;">期末網站評分與簡報:</span></p>
<p>期末考前兩週開始進行.</p>
<p><span style="background-color: #00ffff;">期中成績計算:</span></p>
<p>期中考與之前各週線上測驗成績平均</p>
<p><span style="background-color: #00ffff;">學期成績計算:</span></p>
<p>(期中成績與之後各週線上測驗成績平均)*60%+(期中網站與簡報成績)*20%+(期末網站與簡報成績)*20%</p>
<h1>Progress rate</h1>
<p><span style="background-color: #ffff00;">week1</span></p>
<p>1.申請或登入學校gmail</p>
<p>2.申請github帳號</p>
<p>      (1) 建立個人網站:<span> </span><a href="https://xn--github_-7w0nm600a.github.io/">https://github_帳號.github.io</a></p>
<p>      (2)將計算機程式課程中所編寫的程式與相關資料存入 Github 帳號下的 Gist</p>
<p>3.申請onedrive帳號</p>
<p>      (1)登入學校郵箱 (用來收帳號建立確認信)</p>
<p><span style="color: #000000; background-color: #ffff00;">week2</span></p>
<p>1.建立可攜系統</p>
<p>2.建立github倉儲及網頁</p>
<p><span style="background-color: #ffff00;">week3</span></p>
<p>1.處理replit中的python問題</p>
<p>2.建立site-個人github帳號 倉儲設定:<a href="https://github.com/mdecp2023/site-george0324">https://github.com/mdecp2023/site-george0324</a></p>
<p><span style="background-color: #ffff00;">week4</span></p>
<p>1.建立線上考試帳號</p>
<p>2.建立Github評分倉儲:<a href="https://github.com/george0324/cp2023">https://github.com/george0324/cp2023</a> </p>
<p><span style="background-color: #ffff00;">weak5</span></p>
<p>國慶連假</p>
<p><span style="background-color: #ffff00;">weak6</span></p>
<p>1.練習1<span>從 </span><a href="https://www.w3resource.com/c-programming-exercises/">https://www.w3resource.com/c-programming-exercises/</a><span><span> </span>網頁中自選 10 個練習範例在個人網頁上附上模擬照片和程式分析</span></p>
<p><span>2.練習2從 <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EWd1cR2zOStOjVSduSw6pQMBv1fB6tWu-P9qfVH2YxbDPw?e=uOZW7N">jsliu_c_programming.pdf</a><span> </span>與 <a href="https://link.springer.com/content/pdf/10.1007/978-1-4842-5064-8_1.pdf?pdf=inline%20link">Introduction to C</a><span> (經由校園網路或 VPN 下載)電子書中各擷取 10 個 C 程式範例在個人網頁附上模擬照片和程式分析</span></span></p>
<p><span style="background-color: #ffff00;">week7</span></p>
<p><span><span>1.進行9人分組</span></span></p>
<p><span><span>2.利用 ANSI C 程式畫出 PROC, United Kingdom, Japan 與 Korea Flags.</span></span></p>
<p><span style="background-color: #ffff00;">week8</span></p>
<p><span style="background-color: #ffff00;">week9</span></p>
<p><span style="background-color: #ffffff;">1.期末考自評</span></p>
<p><span style="background-color: #ffffff;">2.程式練習</span></p>
<p><span style="background-color: #ffff00;">week10</span></p>
<p>1.<span>快速設定電腦輔助設計室中的網路 - 採 IPv6 網路設定，以個人IPV6位址允許個個組員修改網頁內容</span></p>
<p><span></span><span style="background-color: #ffff00;">weak11</span></p>
<p>1.透過老師給定的指令擷取工作站室中的課程筆記</p>
<p><span style="background-color: #ffff00;">weak12</span></p>
<p>1.<span>說明如何在 Replit, s.cycu.org 與 Windows 中執行 C 程式</span></p>
<p>2.<span>說明如何在 Replit, s.cycu.org 與 Windows 中執行 C 程式的 gd 繪圖</span></p>
<p>3.用考試來代表出席</p>
<p><span style="background-color: #ffff00;">weak13</span></p>
<p><span style="background-color: #ffff00;">weak14</span></p>
<p>1.維護個人與分組的網站內容</p>
<p>2.程式練習</p>
<p><span style="background-color: #ffff00;">weak15</span></p>
<p>1.<span>說明課程總結, 並且更新可以開發 C 靜態與動態繪圖的程式環境</span></p>
<p>2.運用<span>程式內容所</span><span>印出的六組 ABED 等繪製 ROC 國旗白日圖案中的菱形四個關鍵點</span></p>
<p><span style="background-color: #ffff00;">weak16</span></p>
<p><span>1.</span></p>
<p></p>
<h1>note</h1>
<h3>倉儲</h3>
<p>1.先登入teams帳號</p>
<p>2.進入老師的作業倉儲:<a href="https://classroom.github.com/a/Ty_eyXdV" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://classroom.github.com/a/ty_eyxdv">https://classroom.github.com/a/Ty_eyXdV</a></p>
<p>點選Create repository from template 複製頁面出現的網址</p>
<p>3.開啟cmd(黑色頁面的編譯器)</p>
<p>輸入cd tmp/cd site-學號</p>
<p>輸入pip install pyopenssl</p>
<p>輸入cms</p>
<p>接著會出現一段網址</p>
<p>複製網址後到瀏覽器開啟進入近端網頁</p>
<p>然後將網頁編輯成自己的作業網站</p>
<p>4.接著到倉儲網站的settings的Developer settings裡的Personal access tokens建立一個自己的token，</p>
<p>5.輸入acp "(名稱)"</p>
<p>6.即可完成，並去Setting點pages，檢查是否上傳成功。</p>
<h2>ssh push</h2>
<p>1.下載putty</p>
<p>2.在putty裡的<span>puttygen.exe做一把金鑰(按Generate)</span></p>
<p><span>3.將key存到遠端github(點選頭像選取Settings裡的SSH and GPG keys)</span></p>
<p><span>4.回到<span>puttygen.exe案save private key</span></span></p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>